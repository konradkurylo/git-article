db.article.update({"_id" : ObjectId("61f6dee82004427052406449")}, {$set: {"payload": "The standard lifecycle of branch is as follows: branch is created from default branch when issue (feature, bug or change) appears. Then developer works on issue, commits, pushes code to the remote repository and creates merge requests. After developer finishes work on one issue, she/he takes another. But what happen to branches she/he created? If they are not purged they stay in git repository and makes git navigation more inconvenient. %% If you are not purging already merged branches regularly that can happen: $$ https://gist.githubusercontent.com/konradkurylo/4c562a252ee05e066df0240cf48b5852/raw/3cc5751bd1f83c91930b30b2b8687c3bab6a0146/display.sh %% command result in displaying a lot of branches $$ https://gist.githubusercontent.com/konradkurylo/955564377c57d584d5ac9d88c98cbc88/raw/e68489ca4e7c5cd0b89bd4706389b11be4e28536/branches.txt %% That branches accumulation does not cause any damage to the project of course. But the more branches, the more inconvenient it is for the developer to navigate git. To purge all remote branches that are already merged to default branch you can use this command: $$ https://gist.githubusercontent.com/konradkurylo/08dcc962809ad9617295bf45eecfb5fd/raw/16fc4e5e5380086fdee116458c50d70fe31f4d5d/purge-remote-branches.sh %% By remote branches I understand all branches fetched from remote repository and stored locally with remotes/origin/* prefix. The issue is that this command is not a daily basis use. Developers do not remember it and sometimes are even too lazy to google it. (I will show you how to solve that issue later.) %% After you have cleaned your remote branches lets take a look how to delete local branches. The most simple and counterproductive way is: $$ https://gist.githubusercontent.com/konradkurylo/36ce74ed60bf1cc65174fea6d74213fa/raw/4069501fc5faee94c24773cbcb62cf35bf7d3659/git-delete-one-branch.sh %% And that is how we reached the topic of that article. Is it possible to automate that? The first attempt to delete all branches by one command can be: $$ https://gist.githubusercontent.com/konradkurylo/5dd856bdeecdabc7b35fc42c4d3a652c/raw/c2c9cdf0c7f03ceb1e56c87a9e6eacd4ed00c240/git-delete-all-branches.sh %% But that command can cause damage. We can assume that we don't want to delete default branch. To achieve that it is possible to add another layer: $$ https://gist.githubusercontent.com/konradkurylo/beffc0c61c4ea88767934f0435fc4b09/raw/c1ecc2a143447c75bc2036fc1da3e6e1787a9964/git-delete-all-except-master.sh %% Finally our command is not dangerous. We should also consider that xargs command takes all arguments separately, so git branch -d will try to delete current branch and asterisk '*' sign that are present on the first snippet. To skip that misleading information lets add another layer: $$ https://gist.githubusercontent.com/konradkurylo/a9bfb4ff52274bba5e5e13a43f62e80d/raw/3d983d5a87b596f3fb58554d90f3d53ab6899c63/git-delete-all-branches-except-master-and-current.sh %% Finally, safe and ready to use command works. But it is so long - nobody will remember it or use it. And now comes the magic of git aliases. You can edit ~/.gitconfig file or add aliases from command line. $$ https://gist.githubusercontent.com/konradkurylo/7e7cd7c81edb3accee3b8825a14c0a05/raw/a1748566a87ebbc806e700d941e6b54dc858f73f/git-alias-for-purging-branches.config %% Now you can use a simply command every time you would like to purge already merged branches. $$ https://gist.githubusercontent.com/konradkurylo/98eca4603a4ed28ec174ccd299b4f9ae/raw/905cdcd52f6c89accbf124d6b91cf37e3f10e66c/git-purge-alias.sh"}});
db.article.update({"_id" : ObjectId("61f6dee82004427052406449")}, {$set: {"subtitle": "The best developers are lazy developers. Lazy developers do not remember about purging git branches, even don't have time for googling commands how to do that. May this article change that."}});
db.article.update({"_id" : ObjectId("61f6dee82004427052406449")}, {$set: {"payloadIntro": "The standard lifecycle of branch is as follows: branch is created from default branch when issue (feature, bug or change) appears. Then developer works on issue, commits, pushes code to the remote repository and creates merge requests. After developer finishes work on one issue, she/he takes another. But what happen to branches she/he created? If they are not purged they stay in git repository and makes git navigation more inconvenient."}});

db.article.update({"_id" : ObjectId("61f6bc382004427052406441")}, {$set: {"payload": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent lacus turpis, vestibulum sit amet elit et, molestie pulvinar metus. In hac habitasse platea dictumst. Integer tincidunt, neque sit amet aliquet lacinia, quam lacus scelerisque erat, vel faucibus sem ligula eu urna. Duis vulputate iaculis dolor, faucibus imperdiet nisl pretium in. Sed non lobortis leo. Aenean tempus sollicitudin ipsum vel bibendum. Nam gravida finibus odio, at laoreet leo posuere eget. Nulla facilisi. %% Vestibulum sagittis ullamcorper lorem eu dapibus. Vivamus tristique malesuada ante eget mattis. Nunc condimentum diam tellus, vitae egestas eros eleifend sed. Integer consequat tempus purus, nec tempus odio. Donec viverra eget metus a venenatis. Duis ut lectus at purus dictum pulvinar. Donec ultricies sollicitudin massa, at facilisis mi tincidunt at. Sed auctor at sapien in suscipit. Nunc varius urna nec metus consectetur, eu tincidunt dolor gravida. Praesent placerat sit amet purus et ornare. Curabitur interdum mauris eget sagittis laoreet. %% Mauris egestas neque vel placerat malesuada. Sed maximus augue in nulla consequat aliquam. Duis nec ipsum magna. Quisque tincidunt dignissim magna vitae finibus. Pellentesque eget leo non purus efficitur feugiat. Duis velit turpis, cursus at fringilla vitae, congue eleifend lorem. Nulla vestibulum metus eu pulvinar eleifend. Aliquam quis lacus rutrum, condimentum ipsum eu, hendrerit arcu. Donec vitae turpis sagittis, molestie eros a, ornare felis. %% Integer risus odio, consectetur et purus eget, accumsan elementum elit. Nam ex ipsum, condimentum ac volutpat sit amet, cursus non dolor. Fusce in maximus massa, vitae sollicitudin sapien. Vivamus imperdiet enim justo, sit amet eleifend orci placerat non. Donec tellus elit, gravida non consequat eu, accumsan eu neque. Fusce venenatis ex ut rhoncus facilisis. Quisque porttitor nec augue at dignissim. Aenean leo ex, ornare ut cursus ut, varius eget nulla. Duis tortor ex, cursus nec quam ac, auctor euismod nisi. Aliquam lorem enim, elementum id placerat non, bibendum eget nunc. Nunc sollicitudin et dui id semper. Phasellus posuere sit amet nisi ut rutrum. Quisque pharetra nibh ut dolor gravida, quis porttitor lectus convallis. Mauris in quam vitae turpis efficitur faucibus id sit amet diam. Aenean at velit malesuada, condimentum lacus ac, blandit tellus. %% Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec ac nibh eget magna elementum pulvinar vel ut lacus. Proin euismod enim eget suscipit ullamcorper. Mauris justo quam, euismod ut enim eu, congue euismod dui. Curabitur aliquam neque tincidunt, pharetra quam nec, egestas est. Praesent elementum lorem lacus, ut vehicula dui posuere ut. Curabitur in enim massa. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; In maximus euismod ligula, non volutpat erat aliquam non. Maecenas euismod libero eros, id aliquet nisl blandit congue. Cras tristique, enim et molestie consequat, arcu nulla volutpat mauris, vestibulum fringilla velit quam et ante. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Mauris bibendum sit amet risus et fermentum. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Proin cursus convallis ipsum, et finibus neque egestas in. Curabitur lacus erat, mollis in arcu non, tempor pharetra eros."}});
db.article.update({"_id" : ObjectId("61f6bc382004427052406441")}, {$set: {"subtitle": "Writing a blog it is not an easy thing. So let's start with lorem ipsum."}});
